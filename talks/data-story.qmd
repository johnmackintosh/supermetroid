---
title: "Super Metroid 100% Speed Runs"
author: "Charles, Cecilie, and Dave (`anatomecha`)"
format: 
  revealjs:
    theme: night
server: shiny
editor: source
mainfont: "courier"
---

```{r setup r, include=FALSE}

knitr::opts_chunk$set(
  echo=FALSE,
  error=TRUE,
  fig.width=12,
  fig.height=8,
  fig.align="center"
)


```

```{r pkg r}
library(supermetroid)
library(gt)
library(gtExtras)
library(shiny)
library(tidyverse)
library(plotly)
library(ggraph) # graphs
library(tidygraph) # graphs


library(bslib)
library(shinyjs)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyWidgets)
library(shinythemes)



```

<iframe width="1120" height="630" src="https://www.youtube.com/embed/2Nq4m9ZH8uY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

::: {.notes}
- thank anders
- 2 x piano 1 x datasci
- 2 friends from Unity
- What is Unity?
  - anatomecha intro

- anatomecha:
  - What is Super Metroid?
  - What is speed running?
  - The question that started this: When competetive? 
  
:::
  
---

```{r}
top_five_vis()

```

---

```{r}
top_games_vis()

```

# Rankings

## [speedrun.com](https://www.speedrun.com/supermetroid?h=100&x=xd1mpewd) leaderboard

```{r }
# inspect top 10 players on speedrun.com
supermetroid::src_df %>% 
  ungroup() %>% 
  head(10) %>% 
  select(1:5) %>% 
  gt() %>% 
  gt_theme_dark()

```

---

```{r raincloud ui}


fluidPage(
  theme = bs_theme(version = 4, bootswatch = "slate"),
  p(textOutput("raincloud_title")),
  sidebarLayout(
    sidebarPanel(
      width = 3,
      p("Highest rank"),
      numericInput(
        "min_rank",
        label = "",
        value = 1,
        min = 1,
        max = max(supermetroid::src_df$rank)
      ),
      p("Lowest rank"),
      numericInput(
        "max_rank",
        label = "",
        value = max(supermetroid::src_df$rank),
        min = 1,
        max = max(supermetroid::src_df$rank)
      ),
    ),
    mainPanel(width = 9,
              plotOutput(
                "raincloud", height = "600px", width = "100%"
              ))
  )
)



```

```{r raincloud server}
#| context: server

output$raincloud <- renderPlot({
  supermetroid::all_run_raincloud(
    font_size = 30,
    lowest_rank = input$max_rank,
    highest_rank = input$min_rank
  )
})

output$raincloud_title <- renderText({
  sprintf(
    "How fast do players ranked from  %s to %s run?",
    input$min_rank,
    input$max_rank
  )
})


```

# Routes 

## [splits.io](https://splits.io/) game event data

```{r}
splits_df %>%
  select(1:10) %>% 
  head(7) %>% 
  gt() %>% gt_theme_dark()


```


---

```{r}
cum_t_route_vis()+ylim(0, 200)

```


---

```{r fig.cap="image source: metroid.retropixel.net"}
knitr::include_graphics("https://metroid.retropixel.net/games/metroid3/metroid3_map.gif")

```

--- 

::: {.panel-tabset}


```{r}
from_to_gg <- 
  from_to_df %>% 
  as_tbl_graph()

```

### Mess

```{r fig.width=5, fig.height=5}
from_to_gg %>% 
  ggraph() +
  geom_edge_fan(aes(size = runs))
  

```

### Order


```{r fig.width=5, fig.height=5}
from_to_gg %>%
  ggraph(layout = "linear", circular = TRUE) +
  geom_edge_fan(aes(size = runs), alpha = 0.2) +
  geom_node_point(aes(colour = ))


```


### Dir


```{r fig.width=5, fig.height=5}
from_to_df %>%
  ggraph(layout = "linear") +
  geom_edge_fan(aes(size = runs), alpha = 0.2) +
  geom_node_point()


```

### Busy

```{r fig.width=5, fig.height=5} 
from_to_df %>% 
  ggraph::ggraph(layout = "linear") +
  ggraph::geom_edge_arc(arrow = arrow(), aes(alpha = runs)) 


```

### Strats

  
```{r fig.height=5,fig.width=7}
route_graph(selected_splits = c("varia suit", "phantoon", "space jump", "ridley", "golden 4", "grapple beam"))
```



:::  
  

---

```{r ranked ui}
fluidPage(
  theme=shinytheme("slate"),
  chooseSliderSkin("Simple", color = supermetroid::sm_col_h$highlight),
  tags$head(
    tags$style("#make_smaller {font-size: 0.5vw;}")
  ),
            p(textOutput("ranked_title")),
          sidebarLayout(
            sidebarPanel(
              width = 3,
              p("Split"),
              selectInput(
                "split",
                "",
                choices = common_splits$game_event,
                selected = "ice beam"
              ),
              p("Max time"),
              numericInput(
                "max_t",
                "",
                min = 100,
                max = 400,
                value = 400
              ),
              NULL
            ),
            mainPanel(
              width = 9,
              plotOutput("ranked_runs", height = "600px", width = "100%")
            )
          ))

```

```{r ranked server}
#| context: server

output$ranked_runs <- renderPlot({
  
  supermetroid::ranked_runs(
    selected_split = input$split,
    font_size = 30
  ) +
    ggplot2::xlim(0, input$max_t)
})

output$ranked_runs_title <- renderText({
  sprintf(
    "Inspect game event clusters"
  )
})


```

---

```{r echo=TRUE}
sio_routes_wide %>% 
  ungroup() %>% 
  select(1:10) %>%
  sample_n(10) %>% 
  gt() %>% 
  tab_header(title = "What is the fastest route?",
             subtitle = "Open ML problem"
             ) %>% 
  gt_theme_dark()

```

---

- knn imputation?
- k-means?
- hierarchical clustering?
- how to classify route classes?


```{r}
sio_routes_wide %>% 
  ungroup() %>% 
  select(1:10) %>%
  sample_n(5) %>% 
  gt() %>% 
  tab_header(title = "What is the fastest route?",
             subtitle = "Open ML problem"
             ) %>% 
  gt_theme_dark()

```


# Seeking data science position in Copenhagen

## Looking for

Mid-level data science position: ML, exploratoray data analysis, and modelling.

### Priorities

-   Copenhagen
-   Data science
-   Swing dancing

Find me on LinkedIn.

---
<iframe width="1120" height="630" src="https://www.youtube.com/embed/kY4VpZjFfwk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
